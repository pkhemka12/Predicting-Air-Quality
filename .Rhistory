View(df1)
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
aqiDaily <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
library(dplyr)
aqiDaily %>% select(CO, Ozone, PM10, PM25, NO2) %>% mutate(is.numeric)
library(dplyr)
aqiDaily$Date <- as.Date(aqiDaily$Date)
aqiDaily %>% select(CO, Ozone, PM10, PM25, NO2) %>% mutate(as.numeric)
aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, is.factor)
library(dplyr)
aqiDaily$Date <- as.Date(aqiDaily$Date)
aqiDaily <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, is.factor)
chr <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, is.factor)
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
aqiDaily <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
library(dplyr)
aqiDaily$Date <- as.Date(aqiDaily$Date)
chr <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, is.factor)
View(chr)
library(dplyr)
aqiDaily$Date <- as.Date(aqiDaily$Date)
chr <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, as.factor)
library(dplyr)
aqiDaily$Date <- as.Date(aqiDaily$Date)
chr <- aqiDaily %>% select(c(Main.Pollutant, Site.Name..of.Overall.AQI., Site.ID..of.Overall.AQI., Source..of.Overall.AQI.)) %>% mutate_if(is.character, as.factor)
aqiDaily[, 3:6] <- sapply(aqiDaily[, 3:6], as.factor)
aqiDaily[, 3:6] <- sapply(aqiDaily[, 3:6], as.factor)
chr2fct <- aqiDaily %>% select(c(Main.Pollutant, Site.Name..of.Overall.AQI., Site.ID..of.Overall.AQI., Source..of.Overall.AQI.)) %>% mutate_if(is.character, as.factor)
remove(chr)
View(aqiDaily)
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
aqiDaily <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
aqiDaily$Date <- as.Date(aqiDaily$Date, "%m/%d/%y")
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
aqiDaily <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
aqiDaily$Date <- as.Date(aqiDaily$Date, "%m/%d/%Y")
chr2fct <- aqiDaily %>% select(c(Main.Pollutant, Site.Name..of.Overall.AQI., Site.ID..of.Overall.AQI., Source..of.Overall.AQI.)) %>% mutate_if(is.character, as.factor)
chr2fct <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, as.factor)
View(chr2fct)
chr2num <- aqiDaily %>% select(c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, as.numeric)
View(chr2num)
aqiDaily_new <- cbind(chr2fct, chr2num)
View(aqiDaily_new)
#Check na vals
percNA <- is.na.data.frame(aqiDaily_new)/dim(aqiDaily_new)[1] * 100
percNA
#Check na vals
percNA <- sum(is.na.data.frame(aqiDaily_new))/dim(aqiDaily_new)[1] * 100
percNA
#Check na vals
percNA <- colSums(is.na.data.frame(aqiDaily_new))/dim(aqiDaily_new)[1] * 100
percNA
#Option 1
# We remove PM10 as per standard val > 30% Missing vals
opt1 <- aqiDaily_new %>% select(-PM10)
#Option 2
#Impute by median
opt2 <- aqiDaily_new %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
opt1 <- aqiDaily_new %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
View(opt1)
#Option 1
# We remove PM10 as per standard val > 30% Missing vals
opt1 <- aqiDaily_new %>% select(-PM10)
opt1 <- opt1 %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
View(opt2)
levels(aqiDaily_new$Main.Pollutant)
aqiDaily_new$Main.Pollutant == "PM10"
sum(aqiDaily_new$Main.Pollutant == "PM10")
summary(opt2)
aqiDaily_new <- aqiDaily_new %>% select(-c(Site.ID..of.Overall.AQI., Source..of.Overall.AQI.))
summary(aqiDaily_new)
ts.plot(opt2$Overall.AQI.Value)
plot(opt2$Overall.AQI.Value)
plot(ts(opt2$Overall.AQI.Value, start = 2012))
plot(ts(opt2$Overall.AQI.Value, start = c(2012, 1))
plot(ts(opt2$Overall.AQI.Value, start = c(2012, 1)))
plot(ts(opt2$Overall.AQI.Value, start = c(2012, 1), frequency = 365))
plot(ts(opt2$Overall.AQI.Value, start = c(2012, 1), frequency = 365), main = "AQI vs time", ylab = "AQI")
plot(ts(opt2$Ozone, start = c(2012, 1), frequency = 365), main = "Ozone values vs time", ylab = "Ozone")
plot(ts(opt2$PM25, start = c(2012, 1), frequency = 365), main = "PM2.5 concentration vs time", ylab = "PM2.5")
percNA
# We remove PM10 as per standard val > 30% Missing vals
aqi_clean <- aqiDaily_new %>% select(-PM10)
aqi_clean <- aqi_clean %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
plot(ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365), main = "AQI vs time", ylab = "AQI")
plot(ts(aqi_clean$Ozone, start = c(2012, 1), frequency = 365), main = "Ozone concentration vs time", ylab = "Ozone")
plot(ts(aqi_clean$PM25, start = c(2012, 1), frequency = 365), main = "PM2.5 concentration vs time", ylab = "PM2.5")
View(aqi_clean)
#Check na vals
percNA <- colSums(is.na.data.frame(aqiDaily_new))/dim(aqiDaily_new)[1] * 100
percNA
# We remove PM10 as per standard val > 30% Missing vals
aqi_clean <- aqiDaily_new %>% select(-PM10)
aqi_clean <- aqi_clean %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
summary(aqi_clean)
summary(aqi_clean)
#Initial Plots to see distribution with time
plot(ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365), main = "AQI vs time", ylab = "AQI")
plot(ts(aqi_clean$Ozone, start = c(2012, 1), frequency = 365), main = "Ozone concentration vs time", ylab = "Ozone")
plot(ts(aqi_clean$PM25, start = c(2012, 1), frequency = 365), main = "PM2.5 concentration vs time", ylab = "PM2.5")
plot(ts(aqi_clean$CO, start = c(2012, 1), frequency = 365), main = "CO concentration vs time", ylab = "CO")
plot(ts(aqi_clean$NO2, start = c(2012, 1), frequency = 365), main = "NO2 concentration vs time", ylab = "NO2")
#def - PK
# summary()
#
# plot  of main pollutatnt
#
# plot of co and no2
#
# group by site pollutants/aqi ?
#
# seasonal decomp
#
# #Def compl - Pk
# univariate
# acf pacf,
#   differencing
# - estimates of model - sarima - aic bic, blah - fit - check rmse, mape, mae for test
# kalman for univariate
#   arch/garch
#   filters - holt
#
#
#
# train-test: 80 - 20
##Checking AQI and pollutants by site
sitedf <- aqi_clean %>% group_by(Site.Name..of.Overall.AQI.)
View(sitedf)
##Checking AQI and pollutants by site
aqi_clean %>% group_by(Site.Name..of.Overall.AQI.) %>% summarise(AvgAQI = mean(Overall.AQI.Value))
##Checking AQI and pollutants by site
aqi_clean %>% group_by(Site.Name..of.Overall.AQI.) %>%
summarise(
AvgAQI = mean(Overall.AQI.Value),
AvgCO = mean(CO),
AvgOzone = mean(Ozone),
AvgPM2.5 = mean(PM25),
AvgNO2 = mean(NO2)
)
library(ggplot2)
##Main Pollutant plot
ggplot(aqi_clean, aes(x = Main.Pollutant)) + geom_histogram()
##Main Pollutant plot
ggplot(aqi_clean, aes(x = Main.Pollutant)) + geom_histogram(stat = "count")
##Main Pollutant plot
ggplot(aqi_clean, aes(x = Main.Pollutant, fill = Main.Pollutant)) + geom_histogram(stat = "count")
##Main Pollutant plot
ggplot(aqi_clean, aes(x = Main.Pollutant, fill = Main.Pollutant)) + geom_histogram(stat = "count") + ggtitle("Main Pollutants in the air")
install.packages("ggfortify")
library(ggfortify)
#Decompose AQI to see trends
aqiTS <- ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365)
aqiSTL <- stl(aqiTS, s.window = "periodic")
plot(aqiSTL)
autoplot(aqiSTL, ts.colour = "slategray")
plot(aqiSTL)
autoplot(aqiSTL, ts.colour = "slategray")
#Plot ACF and PACF
acf(aqiTS)
aqiTS
#Decompose AQI to see trends
aqiTS <- ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), end = c(2021, 12), frequency = 365)
aqiTS
aqiSTL <- stl(aqiTS, s.window = "periodic")
autoplot(aqiSTL, ts.colour = "slategray")
#Plot ACF and PACF
acf(aqiTS)
pacf(aqiTS)
#Plot ACF and PACF
acf(aqiTS)
#Check if differencing needed
acf(diff(aqiTS))
pacf(diff(aqiTS))
##Initial Plots to see distribution with time
plot(ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365), main = "AQI vs time", ylab = "AQI")
#Plot ACF and PACF
acf(aqiTS)
pacf(aqiTS)
#Check if differencing needed
acf(diff(aqiTS))
pacf(diff(aqiTS))
#Check if differencing needed
acf(diff(diff(aqiTS)))
pacf(diff(diff(aqiTS)))
#Check if differencing needed
acf(diff(diff(aqiTS)))
pacf(diff(diff(aqiTS)))
#Plot ACF and PACF
acf(aqiTS)
pacf(aqiTS)
#Check if differencing needed
acf(diff(aqiTS))
pacf(diff(aqiTS))
#Redifference
acf(diff(diff(aqiTS)))
pacf(diff(diff(aqiTS)))
#Check if differencing needed
plot(diff(aqiTS))
#Redifference
plot(diff(diff(aqiTS)))
acf(diff(aqiTS))
pacf(diff(aqiTS))
#Plot ACF and PACF
acf(aqiTS)
pacf(aqiTS)
acf(diff(aqiTS))
autoplot(aqiSTL, ts.colour = "slategray")
#Plot ACF and PACF
acf(aqiTS)
pacf(aqiTS)
#Check if differencing needed
plot(diff(aqiTS))
acf(diff(aqiTS))
pacf(diff(aqiTS))
#Redifference
plot(diff(diff(aqiTS)))
acf(diff(diff(aqiTS)))
pacf(diff(diff(aqiTS)))
mod1 <- sarima(aqiTS, 1, 0, 0)
mod2 <- sarima(aqiTS, 0, 1, 3)
mod3 <- sarima(aqiTS, 0, 1, 2)
mod3 <- sarima(aqiTS, 0, 1, 1)
mod3 <- sarima(aqiTS, 0, 2, 1)
mod4 <- sarima(aqiTS, 1, 0, 1)
mod5 <- sarima(aqiTS, 1, 1, 3)
mod5 <- sarima(aqiTS, 2, 1, 3)
mod5 <- sarima(aqiTS, 1, 1, 2)
mod6 <- sarima(aqiTS, 1, 2, 1)
mod6 <- sarima(aqiTS, 2, 2, 2)
mod6 <- sarima(aqiTS, 2, 2, 3)
mod6 <- sarima(aqiTS, 2, 1, 3)
mod6 <- sarima(aqiTS, 1, 1, 3)
mod6 <- sarima(aqiTS, 1, 2, 1)
mod6 <- sarima(aqiTS, 1, 1, 4)
mod6 <- sarima(aqiTS, 2, 1, 4)
mod6 <- sarima(aqiTS, 1, 1, 3)
mod6 <- sarima(aqiTS, 2, 1, 3)
mod6 <- sarima(aqiTS, 1, 1, 3)
mod6 <- sarima(aqiTS, 1, 1, 4)
mod6 <- sarima(aqiTS, 1, 1, 5)
mod6 <- sarima(aqiTS, 2, 1, 2)
mod6 <- sarima(aqiTS, 2, 1, 3)
mod6 <- sarima(aqiTS, 2, 1, 4)
mod6 <- sarima(aqiTS, 3, 1, 3)
mod6 <- sarima(aqiTS, 1, 1, 1)
mod6 <- sarima(aqiTS, 1, 2, 1)
mod6 <- sarima(aqiTS, 2, 1, 2)
mod6 <- sarima(aqiTS, 2, 1, 3)
mod6 <- sarima(aqiTS, 3, 1, 3)
#Redifference
plot(diff(diff(diff(aqiTS))))
acf(diff(diff(diff(aqiTS))))
pacf(diff(diff(diff(aqiTS))))
mod6 <- sarima(aqiTS, 0, 3, 1)
acf(diff(diff(diff(aqiTS))))
mod6 <- sarima(aqiTS, 0, 3, 2)
mod4 <- sarima(aqiTS, 1, 0, 1, 1, 0, 0)
mod1 <- sarima(aqiTS, 1, 0, 0)
mod2 <- sarima(aqiTS, 0, 1, 3)
mod3 <- sarima(aqiTS, 0, 2, 1)
mod4 <- sarima(aqiTS, 1, 0, 1)
mod5 <- sarima(aqiTS, 1, 1, 2)
mod6 <- sarima(aqiTS, 0, 3, 2)
mod2 <- sarima(aqiTS, 0, 1, 3) #Def not it
mod3 <- sarima(diff(aqiTS), 0, 1, 3)
mod7 <- sarima(aqiTS, 1, 1, 1)
mod7 <- sarima(aqiTS, 2, 1, 1)
mod7 <- sarima(aqiTS, 2, 1, 2)
mod7 <- sarima(aqiTS, 2, 1, 3)
mod7 <- sarima(aqiTS, 2, 2, 3)
mod7 <- sarima(aqiTS, 2, 2, 2)
mod7 <- sarima(aqiTS, 1, 0, 0, 1, 0, 0, 12)
mod7 <- sarima(aqiTS, 1, 0, 0, 1, 0, 0, 1)
mod7 <- sarima(aqiTS, 1, 0, 0, 1, 0, 0, 365)
plot(diff(aqiTS))
acf(diff(aqiTS))
pacf(diff(aqiTS))
mod4 <- sarima(aqiTS, 0, 0, 1)
mod4 <- sarima(aqiTS, 0, 0, 2)
mod4 <- sarima(aqiTS, 0, 1, 2)
mod4 <- sarima(aqiTS, 0, 1, 4)
mod4 <- sarima(aqiTS, 0, 1, 3)
mod4 <- sarima(aqiTS, 1, 1, 1)
mod4 <- sarima(aqiTS, 1, 1, 3)
mod4 <- sarima(aqiTS, 1, 1, 4)
mod4 <- sarima(aqiTS, 1, 1, 5)
mod4 <- sarima(aqiTS, 2, 1, 1)
mod4 <- sarima(aqiTS, 2, 1, 2)
mod4 <- sarima(aqiTS, 2, 1, 3)
mod4 <- sarima(aqiTS, 2, 1, 4)
mod4 <- sarima(aqiTS, 2, 1, 5)
mod4 <- sarima(aqiTS, 3, 1, 1)
mod4 <- sarima(aqiTS, 3, 1, 2)
mod1 <- sarima(aqiTS, 1, 0, 0)
mod2 <- sarima(aqiTS, 0, 1, 3) #Def not it
mod3 <- sarima(aqiTS, 0, 2, 1) #Def not it
mod4 <- sarima(aqiTS, 3, 1, 2)
mod5 <- sarima(aqiTS, 1, 1, 2)
mod6 <- sarima(aqiTS, 0, 3, 2) #Def not it
mod7 <- sarima(aqiTS, 1, 0, 0, 1, 0, 0, 12)
mod8 <- sarima(aqiTS, 0, 2, 1)
mod6 <- sarima(aqiTS, 3, 1, 3)
mod4 <- sarima(aqiTS, 3, 1, 2)
mod5 <- sarima(aqiTS, 1, 1, 2)
mod6 <- sarima(aqiTS, 3, 1, 3)
mod6 <- sarima(aqiTS, 3, 1, 4)
mod6 <- sarima(aqiTS, 3, 1, 5)
mod6 <- sarima(aqiTS, 4, 1, 1)
mod7 <- sarima(aqiTS, 4, 1, 2)
mod7 <- sarima(aqiTS, 4, 1, 3)
mod7 <- sarima(aqiTS, 4, 1, 4)
mod7 <- sarima(aqiTS, 4, 1, 5)
mod7 <- sarima(aqiTS, 4, 1, 2)
mod7 <- sarima(aqiTS, 1, 2, 1)
mod7 <- sarima(aqiTS, 1, 2, 2)
#Seasonal analysis
acf(aqiSTL$time.series[],[1])
#Seasonal analysis
s <- aqiSTL$time.series
#Seasonal analysis
s <- aqiSTL$time.series[, 1]
acf(s)
pacf(s)
acf(diff(s))
pacf(diff(s))
mod8 <- sarima(aqiTS, 0, 1, 3, 0, 1, 2, 12)
knitr::opts_chunk$set(echo = TRUE, warning = F)
library(dplyr)
library(ggplot2)
library(ggfortify)
library(astsa)
library(lubridate)
library(corrplot)
library(forecast)
#Read in individual years
df1 <- read.csv("aqidaily2012.csv")
df2 <- read.csv("aqidaily2013.csv")
df3 <- read.csv("aqidaily2014.csv")
df4 <- read.csv("aqidaily2015.csv")
df5 <- read.csv("aqidaily2016.csv")
df6 <- read.csv("aqidaily2017.csv")
df7 <- read.csv("aqidaily2018.csv")
df8 <- read.csv("aqidaily2019.csv")
df9 <- read.csv("aqidaily2020.csv")
df10 <- read.csv("aqidaily2021.csv")
#Combine to one df
aqiDaily <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#Convert to date
aqiDaily$Date <- as.Date(aqiDaily$Date, "%m/%d/%Y")
#Convert character vars to respective types
chr2fct <- aqiDaily %>% select(-c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, as.factor)
chr2num <- aqiDaily %>% select(c(CO, Ozone, PM10, PM25, NO2)) %>% mutate_if(is.character, as.numeric)
#Combine into a new restructured df
aqiDaily_new <- cbind(chr2fct, chr2num)
summary(aqiDaily_new)
#####Remove SiteId since its exactly the same as name and remove source of overall aqi
aqiDaily_new <- aqiDaily_new %>% select(-c(Site.ID..of.Overall.AQI., Source..of.Overall.AQI.))
#Check na vals
percNA <- colSums(is.na.data.frame(aqiDaily_new))/dim(aqiDaily_new)[1] * 100
percNA
# We remove PM10 as per standard val > 30% Missing vals
aqi_clean <- aqiDaily_new %>% select(-PM10)
aqi_clean <- aqi_clean %>% mutate_if(is.numeric, function(x) ifelse(is.na(x),
median(x, na.rm = T), x))
summary(aqi_clean)
##Initial Plots to see distribution with time
plot(ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365), main = "AQI vs time", ylab = "AQI")
plot(ts(aqi_clean$Ozone, start = c(2012, 1), frequency = 365), main = "Ozone concentration vs time", ylab = "Ozone")
plot(ts(aqi_clean$PM25, start = c(2012, 1), frequency = 365), main = "PM2.5 concentration vs time", ylab = "PM2.5")
plot(ts(aqi_clean$CO, start = c(2012, 1), frequency = 365), main = "CO concentration vs time", ylab = "CO")
plot(ts(aqi_clean$NO2, start = c(2012, 1), frequency = 365), main = "NO2 concentration vs time", ylab = "NO2")
##Checking AQI and pollutants by site
aqi_clean %>% group_by(Site.Name..of.Overall.AQI.) %>%
summarise(
AvgAQI = mean(Overall.AQI.Value),
AvgCO = mean(CO),
AvgOzone = mean(Ozone),
AvgPM2.5 = mean(PM25),
AvgNO2 = mean(NO2)
)
##Main Pollutant plot
ggplot(aqi_clean, aes(x = Main.Pollutant, fill = Main.Pollutant)) + geom_histogram(stat = "count") + ggtitle("Main Pollutants in the air")
#Decompose AQI to see trends
aqiTS <- ts(aqi_clean$Overall.AQI.Value, start = c(2012, 1), frequency = 365)
aqiSTL <- stl(aqiTS, s.window = "periodic")
autoplot(aqiSTL, ts.colour = "slategray")
#Correlation between pollutants
corrplot(cor(aqi_clean[,  c(2, 5:8)]))
test_size <- round(0.2 * length(aqiTS))
test <- ts(tail(aqiTS, n = test_size), start = c(2020, 1), frequency = 365)
train <- ts(head(aqiTS, n = length(aqiTS) - test_size), start = c(2012, 1), frequency = 365)
#Plot ACF and PACF
acf(train)
pacf(train) #possible AR1
#Check if differencing needed
diffTrain <- diff(train)
plot(diffTrain)
acf(diffTrain) #possible MA2
pacf(diffTrain)
#Redifference
plot(diff(diffTrain))
acf(diff(diffTrain)) #possible MA1
pacf(diff(diffTrain))
#Seasonal analysis
s <- stl(train, s.window = "periodic")$time.series[, 1]
acf(diff(diff(s))) #possible MA1
pacf(diff(diff(s)))
#Aggregate daily into weekly
aqiWeekly <- aqi_clean
aqiWeekly$Week <- floor_date(aqiWeekly$Date, "week")
aqiWeekly <- aqiWeekly %>% group_by(Week) %>% summarise(avgAQI = mean(Overall.AQI.Value))
aqiWeeklyTS <- ts(aqiWeekly$avgAQI, start = c(2012, 1), frequency = 52)
aqiWeeklySTL <- stl(aqiWeeklyTS, s.window = 52)
autoplot(aqiWeeklySTL, ts.colour = "slategray")
#Split data
test_size <- round(0.2 * length(aqiWeeklyTS))
test1 <- ts(tail(aqiWeeklyTS, n = test_size), start = c(2020, 1), frequency = 52)
train1 <- ts(head(aqiWeeklyTS, n = length(aqiWeeklyTS) - test_size), start = c(2012, 1), frequency = 52)
#Plot ACF and PACF
plot(train1)
acf(train1)
pacf(train1) #possible AR1
#Check if differencing needed
diffTrain1 <- diff(train1)
plot(diffTrain1)
acf(diffTrain1) #possible MA1
pacf(diffTrain1)
#Models
mod1 <- sarima(train1, 1, 0, 0) #Great fit
mod2 <- sarima(train1, 0, 1, 1) #Def not it
mod3 <- sarima(train1, 1, 1, 1) #Def not it
mod4 <- sarima(train1, 2, 0, 0) #Great fit
#Plot of weekly superimposed over daily
plot(aqiTS, col = "darkgray", main = "AQI vs Time")
lines(aqiWeeklyTS, col = "red")
legend("topleft", legend = c("Daily", "Weekly"), fill = c("darkgray", "red"))
bestMod1 <- auto.arima(train)
summary(bestMod1) #ARIMA(5,0,3) non-zero mean
bestMod2 <- auto.arima(train, d = 1)
summary(bestMod2) #ARIMA(2,1,1)
bestMod3 <- auto.arima(train1)
summary(bestMod3) #ARIMA(2,0,0) non-zero mean
bestMod4 <- auto.arima(train1, d = 1)
summary(bestMod4) #ARIMA(0,1,1) with drift
pred1 <- forecast(bestMod1, h = 731)
pred2 <- forecast(bestMod2, h = 731)
pred3 <- forecast(bestMod3, h = 104)
pred4 <- forecast(bestMod4, h = 104)
pred5 <- sarima.for(train1, n.ahead = 104, 1, 0, 0)
pred6 <- sarima.for(train1, n.ahead = 104, 1, 1, 1)
accuracy(pred1, bestMod1)
library(forecast)
accuracy(pred1, bestMod1)
accuracy(pred1$mean, bestMod1)
accuracy(pred1$mean, test1)
accuracy(pred1$mean, test1)
accuracy(pred2$mean, test1)
accuracy(pred3$mean, test1)
accuracy(pred4$mean, test1)
accuracy(pred5$pred, test1)
accuracy(pred6$pred, test1)
